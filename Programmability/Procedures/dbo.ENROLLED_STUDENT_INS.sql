SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO

CREATE PROCEDURE [dbo].[ENROLLED_STUDENT_INS]
(
  @P_STUDENT_ID VARCHAR(10) = NULL,
  @P_SUBJECT_ID VARCHAR(10) = NULL,
  @P_CLASS_ID VARCHAR(10) = NULL,
  @P_IS_FINISH VARCHAR(1) = NULL,
  @P_CREATE_DT VARCHAR(30) = NULL
)
AS
BEGIN
  DECLARE @L_CURRENT_QUANTITY INT
  DECLARE @L_QUANTITY INT
  DECLARE @L_ENROLLED_ID VARCHAR(15)
  DECLARE @L_REQUIRED_SUBJECT_TABLE TABLE(SUBJECT_ID VARCHAR(15), REQUIRED_SUBJECT_ID VARCHAR(15))
  DECLARE @L_REQ_LEARNED_SUBJECT_TABLE TABLE (SUBJECT_ID VARCHAR(15))
  DECLARE @L_NOT_LEARNED_SUBJECT_TABLE TABLE (SUBJECT_ID VARCHAR(15))
  DECLARE @L_ERROR_MESSAGE NVARCHAR(MAX)
	-- VALIDATE HERE
  IF(NOT EXISTS(SELECT 1 FROM SUBJECT WHERE SUBJECT_ID = @P_SUBJECT_ID 
                AND AUTH_STATUS = 'A' AND RECORD_STATUS = 1))
  BEGIN
    SELECT -1 STATUS_CODE, N'Môn học không tồn tại' ERROR_MESSAGE
		RETURN -1
  END

  IF(NOT EXISTS(SELECT 1 FROM CLASS WHERE CLASS_ID = @P_CLASS_ID 
                AND AUTH_STATUS = 'A' AND RECORD_STATUS = 1))
  BEGIN
    SELECT -1 STATUS_CODE, N'Lớp học không tồn tại' ERROR_MESSAGE
		RETURN -1
  END

  IF(EXISTS(SELECT 1 FROM ENROLLED_STUDENT
            WHERE STUDENT_ID = @P_STUDENT_ID AND CLASS_ID = @P_CLASS_ID))
  BEGIN
    SELECT -1 STATUS_CODE, N'Đăng ký thất bại, sinh viên đã đăng ký lớp này rồi' ERROR_MESSAGE
		RETURN -1
  END

  SELECT @L_CURRENT_QUANTITY = CURRENT_QUANTITY, @L_QUANTITY = QUANTITY FROM CLASS WHERE CLASS_ID = @P_CLASS_ID
  IF(@L_CURRENT_QUANTITY + 1 > @L_QUANTITY)
  BEGIN
    SELECT -1 STATUS_CODE, N'Đăng ký thất bại, lớp đã đủ số lượng' ERROR_MESSAGE
		RETURN -1
  END

  -- CHECK MÔN HỌC YÊU CẦU TRƯỚC
  -- DS CÁC MÔN YÊU CẦU TRƯỚC
  INSERT INTO @L_REQUIRED_SUBJECT_TABLE
  SELECT RS.SUBJECT_ID, RS.REQUIRED_SUBJECT_ID
  FROM REQUIRED_SUBJECT RS
  WHERE RS.SUBJECT_ID = @P_SUBJECT_ID

  -- DS CÁC MÔN YÊU CẦU TRƯỚC ĐÃ HỌC
  INSERT INTO @L_REQ_LEARNED_SUBJECT_TABLE
  SELECT ES.SUBJECT_ID
  FROM ENROLLED_STUDENT ES
  WHERE ES.STUDENT_ID = @P_STUDENT_ID
  AND ES.IS_FINISH = 1
  AND ES.SUBJECT_ID IN (SELECT SUBJECT_ID FROM @L_REQUIRED_SUBJECT_TABLE)

  -- DS CÁC MÔN YÊU CẦU TRƯỚC CHƯA HỌC
  INSERT INTO @L_NOT_LEARNED_SUBJECT_TABLE
  SELECT A.REQUIRED_SUBJECT_ID
  FROM @L_REQUIRED_SUBJECT_TABLE A
  WHERE NOT EXISTS(SELECT 1 FROM @L_REQ_LEARNED_SUBJECT_TABLE B
                   WHERE A.SUBJECT_ID = B.SUBJECT_ID)

  IF (SELECT COUNT(*) FROM @L_NOT_LEARNED_SUBJECT_TABLE) > 0
  BEGIN
    SET @L_ERROR_MESSAGE = N'Đăng ký thất bại. Bạn cần hoàn thành môn: '
    DECLARE @L_NOT_LEARNED_SUBJECT_ID VARCHAR(15)
    DECLARE @L_SUBJECT_NAME NVARCHAR(200), @L_SUBJECT_CODE VARCHAR(15), @L_IS_FIRST BIT = 1
    DECLARE NOT_LEARNED_DT CURSOR FOR
    SELECT * FROM @L_NOT_LEARNED_SUBJECT_TABLE
    OPEN NOT_LEARNED_DT
    
    FETCH NEXT FROM NOT_LEARNED_DT INTO @L_NOT_LEARNED_SUBJECT_ID
    WHILE @@FETCH_STATUS = 0	
    BEGIN
      SELECT @L_SUBJECT_CODE = SUBJECT_CODE, @L_SUBJECT_NAME = SUBJECT_NAME
      FROM SUBJECT WHERE SUBJECT_ID = @L_NOT_LEARNED_SUBJECT_ID
      IF @L_IS_FIRST = 1
        SET @L_ERROR_MESSAGE = @L_ERROR_MESSAGE + @L_SUBJECT_CODE + N' - ' + @L_SUBJECT_NAME
      ELSE
        SET @L_ERROR_MESSAGE = @L_ERROR_MESSAGE + ' ,' + @L_SUBJECT_CODE + N' - ' + @L_SUBJECT_NAME
      FETCH NEXT FROM NOT_LEARNED_DT INTO @L_NOT_LEARNED_SUBJECT_ID
    END
    CLOSE NOT_LEARNED_DT
	  DEALLOCATE NOT_LEARNED_DT
    SELECT -1 as STATUS_CODE, @L_ERROR_MESSAGE ERROR_MESSAGE
  	RETURN -1
  END

  BEGIN TRANSACTION
  EXEC SYS_CodeMasters_Gen 'ES', @L_ENROLLED_ID
  IF @L_ENROLLED_ID IS NULL OR @L_ENROLLED_ID = ''
  GOTO ABORT

  INSERT INTO ENROLLED_STUDENT
  (
    ENROLLED_ID,
    STUDENT_ID,
    CLASS_ID,
    IS_FINISH,
    CREATE_DT,
    AUTH_STATUS,
    RECORD_STATUS
  ) VALUES 
  (
    @L_ENROLLED_ID,
    @P_STUDENT_ID,
    @P_CLASS_ID,
    0,
    GETDATE(),
    'A',
    1
  )
  IF @@Error <> 0 GOTO ABORT

  UPDATE CLASS
  SET CURRENT_QUANTITY = CURRENT_QUANTITY + 1
  WHERE CLASS_ID = @P_CLASS_ID

  COMMIT TRANSACTION
  SELECT 0 as STATUS_CODE, @L_ENROLLED_ID  ENROLLED_ID, '' ERROR_MESSAGE
  RETURN 0

  ABORT:
  BEGIN
  	ROLLBACK TRANSACTION
  	SELECT -1 as STATUS_CODE, '' ERROR_MESSAGE
  	RETURN -1
  END
END

GO